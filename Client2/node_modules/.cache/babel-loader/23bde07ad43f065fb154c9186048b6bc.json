{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yas\\\\Desktop\\\\webapp\\\\Client2\\\\src\\\\components\\\\Table.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nfunction Table() {\n  const [Etds, setEtds] = useState([]);\n  const [EtdsG2, setEtdsG2] = useState([]);\n  const [isPresent, setIsPresent] = useState({}); // Utiliser un objet pour stocker l'état de présence\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/getAggregatedData\").then(res => setEtds(res.data)).catch(err => console.log(err));\n    axios.get(\"http://localhost:3001/getGroupedDataForGroup2\").then(res => {\n      setEtdsG2(res.data);\n      // Mettre à jour l'état de présence ici\n      const updatedIsPresent = res.data.reduce((acc, cur) => {\n        acc[cur.MatriculeEtd] = isPresent[cur.MatriculeEtd] || true; // Utilisation de l'ancienne valeur si elle existe\n        return acc;\n      }, {});\n      setIsPresent(updatedIsPresent);\n    }).catch(err => console.log(err));\n  }, []);\n  const handleCheckboxChange = (MatriculeEtd, checked) => {\n    // Mettre à jour l'état local après la réussite de l'API\n    if (checked) {\n      axios.post(\"http://localhost:3001/postEtds\", {\n        matricule: MatriculeEtd\n      }).then(() => {\n        setEtds(prevEtds => [...prevEtds, MatriculeEtd]); // Ajouter à l'état local\n        setIsPresent(prevState => ({\n          ...prevState,\n          [MatriculeEtd]: true\n        })); // Mettre à jour l'état de présence\n      }).catch(err => console.log(err));\n    } else {\n      axios.delete(`http://localhost:3001/deleteEtd/${MatriculeEtd}`).then(() => {\n        setEtds(prevEtds => prevEtds.filter(mat => mat !== MatriculeEtd)); // Supprimer de l'état local\n        setIsPresent(prevState => ({\n          ...prevState,\n          [MatriculeEtd]: false\n        })); // Mettre à jour l'état de présence\n      }).catch(err => console.log(err));\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Matricule\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Nom\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"Prenom\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Presence\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, EtdsG2.map((Etd, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, Etd.MatriculeEtd), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, Etd.nom), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, Etd.prenom), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      \"aria-label\": \"Checkbox for following text input\",\n      checked: isPresent[Etd.MatriculeEtd] // Utiliser l'état de présence approprié pour cet élément\n      ,\n      onChange: e => handleCheckboxChange(Etd.MatriculeEtd, e.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    })));\n  })))));\n}\nexport default Table;","map":{"version":3,"names":["React","useEffect","useState","axios","Table","Etds","setEtds","EtdsG2","setEtdsG2","isPresent","setIsPresent","get","then","res","data","catch","err","console","log","updatedIsPresent","reduce","acc","cur","MatriculeEtd","handleCheckboxChange","checked","post","matricule","prevEtds","prevState","delete","filter","mat","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","Etd","index","key","scope","nom","prenom","type","onChange","e","target"],"sources":["C:/Users/yas/Desktop/webapp/Client2/src/components/Table.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Table() {\r\n  const [Etds, setEtds] = useState([]);\r\n  const [EtdsG2, setEtdsG2] = useState([]);\r\n  const [isPresent, setIsPresent] = useState({}); // Utiliser un objet pour stocker l'état de présence\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:3001/getAggregatedData\")\r\n      .then((res) => setEtds(res.data))\r\n      .catch((err) => console.log(err));\r\n\r\n    axios\r\n      .get(\"http://localhost:3001/getGroupedDataForGroup2\")\r\n      .then((res) => {\r\n        setEtdsG2(res.data);\r\n        // Mettre à jour l'état de présence ici\r\n        const updatedIsPresent = res.data.reduce((acc, cur) => {\r\n          acc[cur.MatriculeEtd] = isPresent[cur.MatriculeEtd] || true; // Utilisation de l'ancienne valeur si elle existe\r\n          return acc;\r\n        }, {});\r\n        setIsPresent(updatedIsPresent);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const handleCheckboxChange = (MatriculeEtd, checked) => {\r\n    // Mettre à jour l'état local après la réussite de l'API\r\n    if (checked) {\r\n      axios\r\n        .post(\"http://localhost:3001/postEtds\", { matricule: MatriculeEtd })\r\n        .then(() => {\r\n          setEtds(prevEtds => [...prevEtds, MatriculeEtd]); // Ajouter à l'état local\r\n          setIsPresent(prevState => ({ ...prevState, [MatriculeEtd]: true })); // Mettre à jour l'état de présence\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      axios\r\n        .delete(`http://localhost:3001/deleteEtd/${MatriculeEtd}`)\r\n        .then(() => {\r\n          setEtds(prevEtds => prevEtds.filter(mat => mat !== MatriculeEtd)); // Supprimer de l'état local\r\n          setIsPresent(prevState => ({ ...prevState, [MatriculeEtd]: false })); // Mettre à jour l'état de présence\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Matricule</th>\r\n              <th>Nom</th>\r\n              <th>Prenom</th>\r\n              <th>Presence</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {EtdsG2.map((Etd, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <th scope=\"row\">{index + 1}</th>\r\n                  <td>{Etd.MatriculeEtd}</td>\r\n                  <td>{Etd.nom}</td>\r\n                  <td>{Etd.prenom}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      checked={isPresent[Etd.MatriculeEtd]} // Utiliser l'état de présence approprié pour cet élément\r\n                      onChange={(e) =>\r\n                        handleCheckboxChange(Etd.MatriculeEtd, e.target.checked)\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}