{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yas\\\\Desktop\\\\webapp\\\\Client2\\\\src\\\\components\\\\Table.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nfunction Table() {\n  const [Etds, setEtds] = useState([]);\n  const [EtdsG2, setEtdsG2] = useState([]);\n  const [isPresent, setIsPresent] = useState({});\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/getGroupedDataForGroup2\").then(res => {\n      setEtdsG2(res.data);\n      // Créer un objet avec les MatriculeEtd comme clés et false comme valeur par défaut\n      const defaultPresentStatus = res.data.reduce((acc, cur) => {\n        acc[cur.MatriculeEtd] = false;\n        return acc;\n      }, {});\n      setIsPresent(defaultPresentStatus);\n    }).catch(err => console.log(err));\n    axios.get(\"http://localhost:3001/getAggregatedData\").then(res => {\n      setEtds(res.data);\n      //les items de is present qui se trouve dans la reponse sont true\n      const presentStatus = res.data.reduce((acc, cur) => {\n        acc[cur.MatriculeEtd] = true;\n        return acc;\n      }, {});\n      setIsPresent(presentStatus); // Mettre à jour l'état isPresent\n    }).catch(err => console.log(err));\n  }, []);\n  const handleCheckboxChange = (MatriculeEtd, checked) => {\n    // Mettre à jour l'état local après la réussite de l'API\n    if (checked) {\n      axios.post(\"http://localhost:3001/postEtds\", {\n        matricule: MatriculeEtd\n      }).then(() => {\n        setIsPresent(prev => ({\n          ...prev,\n          [MatriculeEtd]: true\n        })); // Mettre à jour l'état isPresent\n      }).catch(err => console.log(err));\n    } else {\n      axios.delete(`http://localhost:3001/deleteEtd/${MatriculeEtd}`).then(() => {\n        setIsPresent(prev => ({\n          ...prev,\n          [MatriculeEtd]: false\n        })); // Mettre à jour l'état isPresent\n      }).catch(err => console.log(err));\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Matricule\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"Nom\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Prenom\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Presence\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, EtdsG2.map((Etd, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, Etd.MatriculeEtd), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, Etd.nom), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, Etd.prenom), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      key: index,\n      type: \"checkbox\",\n      \"aria-label\": \"Checkbox for following text input\",\n      checked: isPresent[Etd.MatriculeEtd],\n      onChange: e => handleCheckboxChange(Etd.MatriculeEtd, e.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    })));\n  })))));\n}\nexport default Table;","map":{"version":3,"names":["React","useEffect","useState","axios","Table","Etds","setEtds","EtdsG2","setEtdsG2","isPresent","setIsPresent","get","then","res","data","defaultPresentStatus","reduce","acc","cur","MatriculeEtd","catch","err","console","log","presentStatus","handleCheckboxChange","checked","post","matricule","prev","delete","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","Etd","index","key","scope","nom","prenom","type","onChange","e","target"],"sources":["C:/Users/yas/Desktop/webapp/Client2/src/components/Table.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Table() {\r\n  const [Etds, setEtds] = useState([]);\r\n  const [EtdsG2, setEtdsG2] = useState([]);\r\n  const [isPresent, setIsPresent] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:3001/getGroupedDataForGroup2\")\r\n      .then((res) => {\r\n        setEtdsG2(res.data);\r\n        // Créer un objet avec les MatriculeEtd comme clés et false comme valeur par défaut\r\n        const defaultPresentStatus = res.data.reduce((acc, cur) => {\r\n          acc[cur.MatriculeEtd] = false;\r\n          return acc;\r\n        }, {});\r\n        setIsPresent(defaultPresentStatus);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    axios\r\n      .get(\"http://localhost:3001/getAggregatedData\")\r\n      .then((res) => {\r\n        setEtds(res.data);\r\n        //les items de is present qui se trouve dans la reponse sont true\r\n        const presentStatus = res.data.reduce((acc, cur) => {\r\n          acc[cur.MatriculeEtd] = true;\r\n          return acc;\r\n        }, {});\r\n        setIsPresent(presentStatus); // Mettre à jour l'état isPresent\r\n\r\n      }\r\n        )\r\n      .catch((err) => console.log(err));\r\n      \r\n  }, []);\r\n\r\n  const handleCheckboxChange = (MatriculeEtd, checked) => {\r\n    // Mettre à jour l'état local après la réussite de l'API\r\n    if (checked) {\r\n      axios\r\n        .post(\"http://localhost:3001/postEtds\", { matricule: MatriculeEtd })\r\n        .then(() => {\r\n          setIsPresent((prev) => ({ ...prev, [MatriculeEtd]: true })); // Mettre à jour l'état isPresent\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      axios\r\n        .delete(`http://localhost:3001/deleteEtd/${MatriculeEtd}`)\r\n        .then(() => {\r\n          setIsPresent((prev) => ({ ...prev, [MatriculeEtd]: false })); // Mettre à jour l'état isPresent\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Matricule</th>\r\n              <th>Nom</th>\r\n              <th>Prenom</th>\r\n              <th>Presence</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {EtdsG2.map((Etd, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <th scope=\"row\">{index + 1}</th>\r\n                  <td>{Etd.MatriculeEtd}</td>\r\n                  <td>{Etd.nom}</td>\r\n                  <td>{Etd.prenom}</td>\r\n                  <td>\r\n                    <input\r\n                      key={index}\r\n                      type=\"checkbox\"\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      checked={isPresent[Etd.MatriculeEtd]}\r\n                      onChange={(e) =>\r\n                        handleCheckboxChange(\r\n                          Etd.MatriculeEtd,\r\n                          e.target.checked\r\n                        )\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}